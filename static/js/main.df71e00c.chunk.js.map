{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","reducers/currentVisualizationViews.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","actions/currentVisualizationViews.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/plugin.js","components/ControlBar/styles/ClearButton.module.css","components/ItemGrid/gridUtil.js","modules/itemTypes.js"],"names":["module","exports","showMoreButton","deleteItemButton","getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","itemWrap","itemHeaderWrap","itemTitle","itemActionsWrap","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","DEFAULT_STATE","sGetCurrentVisualizationView","currentVisualizationViews","sGetCurrentVisualizationViewsRoot","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","DeleteItemButton","Delete_default","red500","actionButtons","itemId","Item_DeleteItemButton","ThreeDots","SpeechBubble","fillRule","transform","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","active","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","appName","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","HEADER_HEIGHT","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","currentVisualizationView","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","newActiveType","currentActiveType","getVisualizationConfig","onSelectVisualizationView","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","ref","VisualizationItem_ItemFooter","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","container","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.df71e00c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { ADD_VISUALIZATION } from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/currentVisualizationViews */\n\nexport const ADD_CURRENT_VISUALIZATION_VIEW = 'ADD_CURRENT_VISUALIZATION_VIEW';\nexport const SET_CURRENT_VISUALIZATION_VIEW = 'SET_CURRENT_VISUALIZATION_VIEW';\n\nexport const DEFAULT_STATE = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case ADD_CURRENT_VISUALIZATION_VIEW: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_CURRENT_VISUALIZATION_VIEW: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(action.value.visualization),\n                    },\n                    isEmpty\n                ),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetCurrentVisualizationViewsRoot = state =>\n    state.currentVisualizationViews;\n\n// selectors level 1\nexport const sGetCurrentVisualizationView = (state, id) =>\n    sGetCurrentVisualizationViewsRoot(state)[id];\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { acAddCurrentVisualizationView } from '../actions/currentVisualizationViews';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    dispatch(\n                        acAddCurrentVisualizationView(extractFavorite(item))\n                    );\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import {\n    ADD_CURRENT_VISUALIZATION_VIEW,\n    SET_CURRENT_VISUALIZATION_VIEW,\n} from '../reducers/currentVisualizationViews';\n\nexport const acAddCurrentVisualizationView = value => ({\n    type: ADD_CURRENT_VISUALIZATION_VIEW,\n    value,\n});\n\nexport const acSetCurrentVisualizationView = value => ({\n    type: SET_CURRENT_VISUALIZATION_VIEW,\n    value,\n});\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n","import React from 'react';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isSingleValue, isYearOverYear } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n        handleClose();\n    };\n\n    const onViewChart = () => {\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n        handleClose();\n    };\n\n    const onViewMap = () => {\n        onSelectActiveType(MAP);\n        handleClose();\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs = !isSingleValue(type) && !isYearOverYear(type);\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            <MenuItem\n                dense\n                active={activeType === CHART}\n                label={i18n.t('View as Chart')}\n                onClick={onViewChart}\n                icon={<ChartIcon style={iconFill} />}\n            />\n            <MenuItem\n                dense\n                active={[REPORT_TABLE, EVENT_REPORT].includes(activeType)}\n                label={i18n.t('View as Table')}\n                onClick={onViewTable}\n                icon={<TableIcon style={iconFill} />}\n            />\n            {itemHasMapView() && (\n                <MenuItem\n                    dense\n                    active={activeType === MAP}\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            <Popover\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                <Menu>\n                    {canViewAs && (\n                        <>\n                            <ViewAsMenuItems />\n                            <Divider />\n                        </>\n                    )}\n                    <MenuItem\n                        dense\n                        icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                        label={i18n.t('Open in {{appName}} app', {\n                            appName: getAppName(item.type),\n                        })}\n                        href={getLink(item, d2)}\n                        target=\"_blank\"\n                    />\n                    <MenuItem\n                        dense\n                        icon={<SpeechBubble />}\n                        label={interpretationMenuLabel}\n                        onClick={handleInterpretationClick}\n                    />\n                </Menu>\n            </Popover>\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetCurrentVisualizationView } from '../../../reducers/currentVisualizationViews';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetCurrentVisualizationView } from '../../../actions/currentVisualizationViews';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst HEADER_HEIGHT = 45;\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        const visualization = await pluginManager.fetch(this.props.item);\n        this.props.onVisualizationLoaded(visualization);\n        this.props.onSelectVisualizationView(\n            this.props.visualization.id,\n            visualization\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const {\n            itemFilters,\n            editMode,\n            item,\n            classes,\n            currentVisualizationView,\n        } = this.props;\n\n        if (!currentVisualizationView) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n        const style = this.getContentStyle();\n        const props = { itemFilters, editMode, item, classes, style };\n\n        switch (this.getActiveType()) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            currentVisualizationView,\n                            itemFilters\n                        )}\n                        forDashboard={true}\n                        style={style}\n                    />\n                );\n            }\n            case MAP: {\n                let visualization = currentVisualizationView;\n                if (item.type === MAP) {\n                    // apply filters only to thematic and event layers for map\n                    const mapViews = currentVisualizationView.mapViews.map(\n                        obj => {\n                            if (\n                                obj.layer.includes('thematic') ||\n                                obj.layer.includes('event')\n                            ) {\n                                return applyFilters(obj, itemFilters);\n                            }\n\n                            return obj;\n                        }\n                    );\n\n                    visualization = {\n                        ...currentVisualizationView,\n                        mapViews,\n                    };\n                } else {\n                    // Non-map AO passed to the maps plugin. Maps plugin will handle it\n                    visualization = applyFilters(\n                        currentVisualizationView,\n                        itemFilters\n                    );\n                }\n\n                return (\n                    <DefaultPlugin {...props} visualization={visualization} />\n                );\n            }\n            default: {\n                const visualization = applyFilters(\n                    currentVisualizationView,\n                    itemFilters\n                );\n\n                return (\n                    <DefaultPlugin {...props} visualization={visualization} />\n                );\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = newActiveType => {\n        const currentActiveType = this.getActiveType();\n        if (newActiveType === currentActiveType) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, currentActiveType);\n\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            newActiveType\n        );\n\n        this.props.onSelectVisualizationView(this.props.visualization.id, {\n            ...visualization,\n            activeType: newActiveType,\n        });\n    };\n\n    getActiveType = () =>\n        (this.props.currentVisualizationView &&\n            this.props.currentVisualizationView.activeType) ||\n        this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    currentVisualizationView: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualizationView: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n    currentVisualizationView: sGetCurrentVisualizationView(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectVisualizationView: (id, visualization) => {\n        dispatch(acSetCurrentVisualizationView({ id, visualization }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport currentVisualizationViews from './currentVisualizationViews';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    currentVisualizationViews,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
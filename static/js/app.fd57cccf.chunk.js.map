{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/MapPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/components/Item/VisualizationItem/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","api","Api","getApi","idx","baseUrl","indexOf","slice","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","MAX_ITEM_GRID_HEIGHT","MAX_ITEM_GRID_HEIGHT_OIPP","MAX_ITEM_GRID_WIDTH_OIPP","a4LandscapeWidthPx","getGridColumns","isNonNegativeInteger","Number","isInteger","hasShape","getGridItemProperties","itemId","i","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","withShape","items","map","index","itemWithShape","Object","assign","Error","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","state","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","render","rootStyle","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","d","fill","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","debounce","async","eventType","getInstance","post","apiPostDataStatistics","link","to","data-test","AddCircleIcon","width","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","onKeypressEnter","focusedClassName","setFocusedClassName","useState","cx","container","onFocus","focused","onBlur","Search","searchIcon","input","placeholder","onChange","target","onKeyUp","keyCode","ShowMoreButton","isMaxHeight","disabled","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","useEffect","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","overflowYClass","overflowYAuto","overflowYHidden","newRows","min","apiPostControlBarRows","leftControls","newLink","AddCircle","push","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ItemSearchField","dataTest","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","save","then","msg","response","uid","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","fields","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","onSuccess","acSetDashboardStarred","delete","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","customDashboard","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","options","add","inputRef","createRef","ref","reference","placement","onClickOutside","arrow","maxWidth","menu","itemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","open","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","auth","defaultHeaders","Authorization","componentDidUpdate","componentWillUnmount","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","small","getLink","onToggleFooter","ItemFooter","line","scrollContainer","LoadingMask","center","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Item","showFooter","configLoaded","pluginIsLoaded","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","getActiveType","memoizedGetVisualizationConfig","getPluginStyle","memoizedApplyFilters","onLoadingComplete","forDashboard","onToggleItemExpanded","selectActiveType","isEditing","calculatedHeight","headerRef","current","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","getContentHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","dsType","apiPostFavoriteDataStatistics","prevState","getVisualizationName","shortened","Function","prototype","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","oldItem","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","validItems","styles","badgeContainer","borderRadius","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","scroll","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","controlBarHeight","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.fd57cccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__3uqoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nimport { getDataStatisticsName } from '../modules/itemTypes';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n}; // update data statistics\n\nexport const apiPostFavoriteDataStatistics = async (id, type) => {\n  if (getDataStatisticsName(type)) {\n    const d2 = await getInstance();\n    const dsType = getDataStatisticsName(type);\n    const url = `dataStatistics?eventType=${dsType}&favorite=${id}`;\n    d2.Api.getApi().post(url);\n  }\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const Filter = ({\n  clearDashboardsFilter,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick} data-test=\"showmore-button\">\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const overflowYClass = isMaxHeight() ? classes.overflowYAuto : classes.overflowYHidden;\n  return <ControlBar height={getControlBarHeight(rows)} onChangeHeight={adjustHeight} onEndDrag={onEndDrag} editMode={false}>\n            <div className={cx(classes.container, overflowYClass)} style={{\n      height: getRowsHeight(rows) + FIRST_ROW_PADDING_HEIGHT\n    }}>\n                <div className={classes.leftControls}>\n                    <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter onKeypressEnter={onSelectDashboard} />\n                </div>\n                {getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />)}\n            </div>\n            <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n        </ControlBar>;\n};\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = (props, context) => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return pluginIsAvailable(activeType || item.type) ? <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, context.d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nItemHeaderButtons.contextTypes = {\n  d2: PropTypes.object\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { apiPostFavoriteDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.memoizedGetContentHeight = memoizeOne(this.getContentHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics) {\n        await apiPostFavoriteDataStatistics(getVisualizationId(this.props.item), this.props.item.type);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const props = {\n      item: this.props.item,\n      itemFilters: this.props.itemFilters,\n      activeType,\n      visualization,\n      style: this.getPluginStyle()\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedApplyFilters} {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  selectActiveType = type => {\n    type !== this.getActiveType() && this.props.selectActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getPluginStyle = () => {\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getContentHeight = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.selectActiveType} onToggleFooter={this.onToggleFooter} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  selectActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  selectActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl } from '../../../modules/util';\nimport { getVisualizationId } from '../../../modules/item';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"overflowYAuto\":\"DashboardsBar_overflowYAuto__2mKmg\",\"overflowYHidden\":\"DashboardsBar_overflowYHidden__24dgC\",\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}